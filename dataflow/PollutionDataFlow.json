{
	"name": "PollutionDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_PollutionData",
						"type": "DatasetReference"
					},
					"name": "pollutiondataSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_AggregateData",
						"type": "DatasetReference"
					},
					"name": "SinkAggregateData"
				}
			],
			"transformations": [
				{
					"name": "AggregatePollutionData"
				},
				{
					"name": "LastUpdatedDateStream"
				},
				{
					"name": "FilteredData"
				},
				{
					"name": "SortPollutionData"
				}
			],
			"script": "parameters{\n\tFilterDateValue as string,\n\tlastNumberOfDays as integer\n}\nsource(output(\n\t\tid as integer,\n\t\tcountry as string,\n\t\tstate as string,\n\t\tcity as string,\n\t\tstation as string,\n\t\tlast_update as string,\n\t\tpollutant_id as string,\n\t\tpollutant_min as integer,\n\t\tpollutant_max as integer,\n\t\tpollutant_avg as integer,\n\t\tpollutant_unit as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\twildcardPaths:['PollutionRawData/**'],\n\tpartitionBy('hash', 1)) ~> pollutiondataSource\nFilteredData aggregate(groupBy(station,\n\t\tpollutant_id,\n\t\tcity,\n\t\tstate),\n\tpollutant_min = min(pollutant_min),\n\t\tpollutant_max = max(pollutant_max),\n\t\tpollutant_avg = avg(pollutant_avg),\n\tpartitionBy('hash', 1)) ~> AggregatePollutionData\npollutiondataSource derive(LastUpdatedDate = toDate(last_update,'dd-MM-yyyy')) ~> LastUpdatedDateStream\nLastUpdatedDateStream filter(LastUpdatedDate >= toDate($FilterDateValue,'yyyy-MM-dd')) ~> FilteredData\nAggregatePollutionData sort(asc(city, true),\n\tasc(station, true)) ~> SortPollutionData\nSortPollutionData sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(concat('Last_', toString($lastNumberOfDays), '_dayPollutionData.csv'))],\n\tpartitionBy('hash', 1)) ~> SinkAggregateData"
		}
	}
}